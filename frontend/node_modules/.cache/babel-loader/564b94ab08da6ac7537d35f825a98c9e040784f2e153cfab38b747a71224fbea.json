{"ast":null,"code":"var _jsxFileName = \"/Users/ayberkakturk/Documents/loadup-talent-pool/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ApplicantList from './components/ApplicantList';\nimport Filters from './components/Filters';\nimport Header from './components/Header';\nimport api from './services/api';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [applicants, setApplicants] = useState([]);\n  const [filteredApplicants, setFilteredApplicants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    location: '',\n    driversLicence: ''\n  });\n  const [selectedApplicants, setSelectedApplicants] = useState([]);\n\n  // Fetch applicants on component mount\n  useEffect(() => {\n    fetchApplicants();\n  }, []);\n\n  // Apply filters when filters state changes\n  useEffect(() => {\n    if (applicants.length > 0) {\n      applyFilters();\n    }\n  }, [filters, applicants]);\n\n  // Fetch applicants from API\n  const fetchApplicants = async () => {\n    try {\n      setLoading(true);\n      const response = await api.getApplicants();\n      setApplicants(response.data);\n      setFilteredApplicants(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch applicants. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  // Apply filters locally\n  const applyFilters = () => {\n    let filtered = [...applicants];\n    if (filters.location) {\n      filtered = filtered.filter(applicant => applicant.location && applicant.location.toLowerCase() === filters.location.toLowerCase());\n    }\n    if (filters.driversLicence) {\n      filtered = filtered.filter(applicant => applicant.driversLicence && applicant.driversLicence === filters.driversLicence);\n    }\n    setFilteredApplicants(filtered);\n  };\n\n  // Handle filter changes\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n\n  // Handle applicant selection\n  const handleApplicantSelect = (id, isSelected) => {\n    if (isSelected) {\n      setSelectedApplicants([...selectedApplicants, id]);\n    } else {\n      setSelectedApplicants(selectedApplicants.filter(applicantId => applicantId !== id));\n    }\n  };\n\n  // Contact selected applicants\n  const handleContactSelected = async () => {\n    if (selectedApplicants.length === 0) {\n      alert('Please select at least one applicant to contact.');\n      return;\n    }\n    try {\n      const result = await api.contactApplicants(selectedApplicants);\n      alert(`Successfully contacted ${result.contactedIds.length} applicants!`);\n    } catch (err) {\n      alert('Failed to contact applicants. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        onFilterChange: handleFilterChange,\n        filters: filters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading applicants...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleContactSelected,\n            disabled: selectedApplicants.length === 0,\n            className: \"contact-button\",\n            children: [\"Contact Selected (\", selectedApplicants.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApplicantList, {\n          applicants: filteredApplicants,\n          onSelectApplicant: handleApplicantSelect,\n          selectedApplicants: selectedApplicants\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s1yJyGp5y0uDqb5IiQMf0X3vf4U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ApplicantList","Filters","Header","api","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","applicants","setApplicants","filteredApplicants","setFilteredApplicants","loading","setLoading","error","setError","filters","setFilters","location","driversLicence","selectedApplicants","setSelectedApplicants","fetchApplicants","length","applyFilters","response","getApplicants","data","err","filtered","filter","applicant","toLowerCase","handleFilterChange","newFilters","handleApplicantSelect","id","isSelected","applicantId","handleContactSelected","alert","result","contactApplicants","contactedIds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","onClick","disabled","onSelectApplicant","_c","$RefreshReg$"],"sources":["/Users/ayberkakturk/Documents/loadup-talent-pool/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ApplicantList from './components/ApplicantList';\nimport Filters from './components/Filters';\nimport Header from './components/Header';\nimport api from './services/api';\nimport './styles.css';\n\nfunction App() {\n  const [applicants, setApplicants] = useState([]);\n  const [filteredApplicants, setFilteredApplicants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    location: '',\n    driversLicence: ''\n  });\n  const [selectedApplicants, setSelectedApplicants] = useState([]);\n\n  // Fetch applicants on component mount\n  useEffect(() => {\n    fetchApplicants();\n  }, []);\n\n  // Apply filters when filters state changes\n  useEffect(() => {\n    if (applicants.length > 0) {\n      applyFilters();\n    }\n  }, [filters, applicants]);\n\n  // Fetch applicants from API\n  const fetchApplicants = async () => {\n    try {\n      setLoading(true);\n      const response = await api.getApplicants();\n      setApplicants(response.data);\n      setFilteredApplicants(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch applicants. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  // Apply filters locally\n  const applyFilters = () => {\n    let filtered = [...applicants];\n    \n    if (filters.location) {\n      filtered = filtered.filter(applicant => \n        applicant.location && applicant.location.toLowerCase() === filters.location.toLowerCase()\n      );\n    }\n    \n    if (filters.driversLicence) {\n      filtered = filtered.filter(applicant => \n        applicant.driversLicence && applicant.driversLicence === filters.driversLicence\n      );\n    }\n    \n    setFilteredApplicants(filtered);\n  };\n\n  // Handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n  };\n\n  // Handle applicant selection\n  const handleApplicantSelect = (id, isSelected) => {\n    if (isSelected) {\n      setSelectedApplicants([...selectedApplicants, id]);\n    } else {\n      setSelectedApplicants(selectedApplicants.filter(applicantId => applicantId !== id));\n    }\n  };\n\n  // Contact selected applicants\n  const handleContactSelected = async () => {\n    if (selectedApplicants.length === 0) {\n      alert('Please select at least one applicant to contact.');\n      return;\n    }\n    \n    try {\n      const result = await api.contactApplicants(selectedApplicants);\n      alert(`Successfully contacted ${result.contactedIds.length} applicants!`);\n    } catch (err) {\n      alert('Failed to contact applicants. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      \n      <main className=\"content\">\n        <Filters \n          onFilterChange={handleFilterChange} \n          filters={filters}\n        />\n        \n        {loading ? (\n          <div className=\"loading\">Loading applicants...</div>\n        ) : error ? (\n          <div className=\"error\">{error}</div>\n        ) : (\n          <>\n            <div className=\"actions\">\n              <button \n                onClick={handleContactSelected}\n                disabled={selectedApplicants.length === 0}\n                className=\"contact-button\"\n              >\n                Contact Selected ({selectedApplicants.length})\n              </button>\n            </div>\n            \n            <ApplicantList \n              applicants={filteredApplicants} \n              onSelectApplicant={handleApplicantSelect}\n              selectedApplicants={selectedApplicants}\n            />\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}