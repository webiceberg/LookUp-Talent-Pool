{"ast":null,"code":"var _jsxFileName = \"/Users/ayberkakturk/Documents/loadup-talent-pool/frontend/src/components/Pagination.jsx\";\nimport React from 'react';\n\n/**\n * Pagination component for navigating through pages of results\n * \n * @param {Object} props - Component props\n * @param {Object} props.pagination - Pagination state (page, pageSize, totalItems, totalPages, etc.)\n * @param {Function} props.onPageChange - Callback for page changes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pagination({\n  pagination,\n  onPageChange\n}) {\n  const {\n    page,\n    totalPages,\n    hasNextPage,\n    hasPrevPage\n  } = pagination;\n\n  // Fix: Ensure totalPages is at least 1 if we have items\n  const displayTotalPages = totalPages || 1;\n\n  // Generate page numbers to display\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxVisiblePages = 5;\n    if (displayTotalPages <= maxVisiblePages) {\n      // If we have fewer pages than the max we want to display, show all\n      for (let i = 1; i <= displayTotalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      // Always include first and last page\n      // For middle pages, show current page and neighbors\n      const firstPage = 1;\n      const lastPage = displayTotalPages;\n\n      // Calculate a range around the current page\n      let startPage = Math.max(page - Math.floor(maxVisiblePages / 2), 1);\n      let endPage = startPage + maxVisiblePages - 1;\n\n      // Adjust if we're near the end\n      if (endPage > displayTotalPages) {\n        endPage = displayTotalPages;\n        startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n      }\n\n      // Add first page if not included in range\n      if (startPage > firstPage) {\n        pageNumbers.push(firstPage);\n        if (startPage > firstPage + 1) {\n          pageNumbers.push('...');\n        }\n      }\n\n      // Add middle pages\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumbers.push(i);\n      }\n\n      // Add last page if not included in range\n      if (endPage < lastPage) {\n        if (endPage < lastPage - 1) {\n          pageNumbers.push('...');\n        }\n        pageNumbers.push(lastPage);\n      }\n    }\n    return pageNumbers;\n  };\n\n  // Don't render pagination if there are no items\n  if (pagination.totalItems <= 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button\",\n      onClick: () => onPageChange(1),\n      disabled: !hasPrevPage,\n      \"aria-label\": \"First Page\",\n      children: \"\\xAB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button\",\n      onClick: () => onPageChange(page - 1),\n      disabled: !hasPrevPage,\n      \"aria-label\": \"Previous Page\",\n      children: \"\\u2039\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-pages\",\n      children: getPageNumbers().map((pageNum, index) => pageNum === '...' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pagination-ellipsis\",\n        children: \"...\"\n      }, `ellipsis-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `pagination-page ${pageNum === page ? 'active' : ''}`,\n        onClick: () => pageNum !== page && onPageChange(pageNum),\n        disabled: pageNum === page,\n        \"aria-label\": `Page ${pageNum}`,\n        \"aria-current\": pageNum === page ? 'page' : undefined,\n        children: pageNum\n      }, pageNum, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button\",\n      onClick: () => onPageChange(page + 1),\n      disabled: !hasNextPage,\n      \"aria-label\": \"Next Page\",\n      children: \"\\u203A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button\",\n      onClick: () => onPageChange(displayTotalPages),\n      disabled: !hasNextPage,\n      \"aria-label\": \"Last Page\",\n      children: \"\\xBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-info\",\n      children: [\"Page \", page, \" of \", displayTotalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","pagination","onPageChange","page","totalPages","hasNextPage","hasPrevPage","displayTotalPages","getPageNumbers","pageNumbers","maxVisiblePages","i","push","firstPage","lastPage","startPage","Math","max","floor","endPage","totalItems","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","pageNum","index","undefined","_c","$RefreshReg$"],"sources":["/Users/ayberkakturk/Documents/loadup-talent-pool/frontend/src/components/Pagination.jsx"],"sourcesContent":["import React from 'react';\n\n/**\n * Pagination component for navigating through pages of results\n * \n * @param {Object} props - Component props\n * @param {Object} props.pagination - Pagination state (page, pageSize, totalItems, totalPages, etc.)\n * @param {Function} props.onPageChange - Callback for page changes\n */\nfunction Pagination({ pagination, onPageChange }) {\n  const { page, totalPages, hasNextPage, hasPrevPage } = pagination;\n  \n  // Fix: Ensure totalPages is at least 1 if we have items\n  const displayTotalPages = totalPages || 1;\n  \n  // Generate page numbers to display\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxVisiblePages = 5;\n    \n    if (displayTotalPages <= maxVisiblePages) {\n      // If we have fewer pages than the max we want to display, show all\n      for (let i = 1; i <= displayTotalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      // Always include first and last page\n      // For middle pages, show current page and neighbors\n      const firstPage = 1;\n      const lastPage = displayTotalPages;\n      \n      // Calculate a range around the current page\n      let startPage = Math.max(page - Math.floor(maxVisiblePages / 2), 1);\n      let endPage = startPage + maxVisiblePages - 1;\n      \n      // Adjust if we're near the end\n      if (endPage > displayTotalPages) {\n        endPage = displayTotalPages;\n        startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n      }\n      \n      // Add first page if not included in range\n      if (startPage > firstPage) {\n        pageNumbers.push(firstPage);\n        if (startPage > firstPage + 1) {\n          pageNumbers.push('...');\n        }\n      }\n      \n      // Add middle pages\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumbers.push(i);\n      }\n      \n      // Add last page if not included in range\n      if (endPage < lastPage) {\n        if (endPage < lastPage - 1) {\n          pageNumbers.push('...');\n        }\n        pageNumbers.push(lastPage);\n      }\n    }\n    \n    return pageNumbers;\n  };\n  \n  // Don't render pagination if there are no items\n  if (pagination.totalItems <= 0) {\n    return null;\n  }\n  \n  return (\n    <div className=\"pagination\">\n      <button \n        className=\"pagination-button\"\n        onClick={() => onPageChange(1)}\n        disabled={!hasPrevPage}\n        aria-label=\"First Page\"\n      >\n        &laquo;\n      </button>\n      \n      <button \n        className=\"pagination-button\"\n        onClick={() => onPageChange(page - 1)}\n        disabled={!hasPrevPage}\n        aria-label=\"Previous Page\"\n      >\n        &lsaquo;\n      </button>\n      \n      <div className=\"pagination-pages\">\n        {getPageNumbers().map((pageNum, index) => (\n          pageNum === '...' ? (\n            <span key={`ellipsis-${index}`} className=\"pagination-ellipsis\">...</span>\n          ) : (\n            <button\n              key={pageNum}\n              className={`pagination-page ${pageNum === page ? 'active' : ''}`}\n              onClick={() => pageNum !== page && onPageChange(pageNum)}\n              disabled={pageNum === page}\n              aria-label={`Page ${pageNum}`}\n              aria-current={pageNum === page ? 'page' : undefined}\n            >\n              {pageNum}\n            </button>\n          )\n        ))}\n      </div>\n      \n      <button \n        className=\"pagination-button\"\n        onClick={() => onPageChange(page + 1)}\n        disabled={!hasNextPage}\n        aria-label=\"Next Page\"\n      >\n        &rsaquo;\n      </button>\n      \n      <button \n        className=\"pagination-button\"\n        onClick={() => onPageChange(displayTotalPages)}\n        disabled={!hasNextPage}\n        aria-label=\"Last Page\"\n      >\n        &raquo;\n      </button>\n      \n      <div className=\"pagination-info\">\n        Page {page} of {displayTotalPages}\n      </div>\n    </div>\n  );\n}\n\nexport default Pagination;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}